[{"path":"https://lucymcgowan.github.io/sve/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 sve authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lucymcgowan.github.io/sve/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lucy D'Agostino McGowan. Maintainer.","code":""},{"path":"https://lucymcgowan.github.io/sve/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McGowan LD (2025). sve: Symmetric Vaccine Efficacy. R package version 0.1.0, https://lucymcgowan.github.io/sve/.","code":"@Manual{,   title = {sve: Symmetric Vaccine Efficacy},   author = {Lucy D'Agostino McGowan},   year = {2025},   note = {R package version 0.1.0},   url = {https://lucymcgowan.github.io/sve/}, }"},{"path":"https://lucymcgowan.github.io/sve/index.html","id":"sve","dir":"","previous_headings":"","what":"Symmetric Vaccine Efficacy","title":"Symmetric Vaccine Efficacy","text":"goal sve facilitate calculation symmetric vaccine efficacy (SVE) corresponding variance confidence intervals.","code":""},{"path":"https://lucymcgowan.github.io/sve/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Symmetric Vaccine Efficacy","text":"can install development version sve like :","code":"devtools::install_github(\"LucyMcGowan/sve\")"},{"path":"https://lucymcgowan.github.io/sve/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Symmetric Vaccine Efficacy","text":"core function, est_sve(), computes symmetric vaccine efficacy confidence interval given event proportions sample sizes vaccinated unvaccinated groups. Example: unvaccinated 10% infection rate vaccinated 5% infection rate n0=n1=1,000n_0=n_1=1,000 default, confidence intervals calculated transformed scale back-transformed order ensure remain -1 1. want use transformation, can set option transform = FALSE:","code":"library(sve) est_sve(p0 = 0.10,          p1 = 0.05,          n0 = 1000,          n1 = 1000) #>   estimate     lower     upper level    method #> 1      0.5 0.3191164 0.6457354  0.95 tanh-Wald est_sve(p0 = 0.10,          p1 = 0.05,          n0 = 1000,          n1 = 1000,         transform = FALSE) #>   estimate     lower     upper level method #> 1      0.5 0.3360176 0.6639824  0.95   Wald"},{"path":"https://lucymcgowan.github.io/sve/index.html","id":"using-adjusted-effect-measures","dir":"","previous_headings":"","what":"Using adjusted effect measures","title":"Symmetric Vaccine Efficacy","text":"est_sve_adjusted() function computes SVE adjusted relative effect measures (e.g., hazard ratios Cox models, relative risks Poisson regression). example using Cox proportional hazards model simulated data set provided package (sim_trial_data).","code":"library(survival)  fit <- coxph(Surv(time, status) ~ vaccination + age + baseline_risk,               data = sim_trial_data) hr <- exp(coef(fit)[\"vaccination\"]) var_log_hr <- vcov(fit)[\"vaccination\", \"vaccination\"]  est_sve_adjusted(theta = hr, var_log_theta = var_log_hr) #>              estimate     lower     upper level    method #> vaccination 0.6776701 0.5923804 0.7479387  0.95 tanh-Wald"},{"path":"https://lucymcgowan.github.io/sve/index.html","id":"methods-overview","dir":"","previous_headings":"","what":"Methods overview","title":"Symmetric Vaccine Efficacy","text":"symmetric vaccine efficacy (SVE) defined SVE=2(p0−p1)p0+p1+|p0−p1|,\\text{SVE}=\\frac{2(p_0-p_1)}{p_0+p_1+|p_0-p_1|}, : p0p_0 = event proportion unvaccinated group p1p_1 = event proportion vaccinated group formulation ensures estimator bounded -1 1. Equivalently, can written terms relative effect measure, θ\\theta (relative risk hazard ratio): SVE=2(1−θ)1+θ+|1−θ|.\\text{SVE} = \\frac{2(1 - \\theta)}{1 + \\theta + |1 - \\theta|}.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/est_sve.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetric Vaccine Efficacy — est_sve","title":"Symmetric Vaccine Efficacy — est_sve","text":"Computes symmetric vaccine efficacy (SVE) associated confidence intervals based observed proportions events vaccinated unvaccinated groups.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/est_sve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symmetric Vaccine Efficacy — est_sve","text":"","code":"est_sve(p0, p1, n0, n1, level = 0.95, transform = TRUE)"},{"path":"https://lucymcgowan.github.io/sve/reference/est_sve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symmetric Vaccine Efficacy — est_sve","text":"p0 Numeric. Proportion (risk incidence) unvaccinated group. p1 Numeric. Proportion (risk incidence) vaccinated group. n0 Integer. Sample size unvaccinated group. n1 Integer. Sample size vaccinated group. level Confidence level interval (default 0.95). transform Logical. TRUE (default), applies archtanh-transform constructing confidence intervals transforms back original scale (tanh-Wald). FALSE, uses standard Wald interval.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/est_sve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symmetric Vaccine Efficacy — est_sve","text":"data frame following columns: estimate symmetric vaccine efficacy estimate. lower Lower bound confidence interval. upper Upper bound confidence interval. level Confidence interval level. method Indicates whether interval tanh-Wald interval standard Wald.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/est_sve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Symmetric Vaccine Efficacy — est_sve","text":"default, confidence intervals constructed using hyperbolic arctangent (tanh-Wald) improved coverage, especially efficacy values approach bounds ±1. symmetric vaccine efficacy (SVE) defined : $$ \\text{SVE} = 2 \\times \\frac{p_0 - p_1}{p_0 + p_1 + |p_0 - p_1|} $$","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/est_sve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Symmetric Vaccine Efficacy — est_sve","text":"","code":"# Example: unvaccinated 10% infection rate, vaccinated 5%, equal group sizes est_sve(p0 = 0.10, p1 = 0.05, n0 = 1000, n1 = 1000) #>   estimate     lower     upper level    method #> 1      0.5 0.3191164 0.6457354  0.95 tanh-Wald  # Without Fisher z-transform (uses Wald interval) est_sve(p0 = 0.10, p1 = 0.05, n0 = 1000, n1 = 1000, transform = FALSE) #>   estimate     lower     upper level method #> 1      0.5 0.3360176 0.6639824  0.95   Wald"},{"path":"https://lucymcgowan.github.io/sve/reference/sim_trial_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Vaccine Trial Data — sim_trial_data","title":"Simulated Vaccine Trial Data — sim_trial_data","text":"simulated data set.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/sim_trial_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Vaccine Trial Data — sim_trial_data","text":"","code":"sim_trial_data"},{"path":[]},{"path":"https://lucymcgowan.github.io/sve/reference/sim_trial_data.html","id":"sim-trial-data","dir":"Reference","previous_headings":"","what":"sim_trial_data","title":"Simulated Vaccine Trial Data — sim_trial_data","text":"data frame 500 rows 60 columns: id ID vaccination Vaccine status (1 = vaccinated, 0 = unvaccinated) age Age baseline_risk Baseline risk (low, medium, high) time Survival time status Censoring status","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/sve_from_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","title":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","text":"Computes symmetric vaccine efficacy (SVE) associated confidence intervals relative effect measure (e.g., relative risk, hazard ratio, odds ratio) obtained regression model.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/sve_from_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","text":"","code":"sve_from_effect(theta, var_log_theta, level = 0.95, transform = TRUE, c = 1.96)"},{"path":"https://lucymcgowan.github.io/sve/reference/sve_from_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","text":"theta Numeric. relative effect measure (e.g., relative risk Poisson regression, hazard ratio Cox model, etc.). Can vector. var_log_theta Numeric. estimated variance log(theta), typically obtained model output (e.g., vcov(model) squared standard error). Must length theta. level Confidence level interval (default 0.95). transform Logical. TRUE (default), applies archtanh-transform constructing confidence intervals transforms back original scale (tanh-Wald). FALSE, uses standard Wald interval. c Numeric. Constant determining epsilon smoothing approximation (default 1.96). smoothing parameter set c * sqrt(var_log_theta).","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/sve_from_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","text":"data frame following columns: estimate symmetric vaccine efficacy estimate. lower Lower bound confidence interval. upper Upper bound confidence interval. level Confidence interval level. method Indicates whether interval tanh-Wald interval standard Wald.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/sve_from_effect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","text":"symmetric vaccine efficacy (SVE) relative effect measure : $$ \\text{SVE} = \\frac{2(1 - \\theta)}{1 + \\theta + |1 - \\theta|} $$ \\(\\theta\\) relative effect measure. variance computed via delta method applied \\(\\phi = \\log(\\theta)\\). \\(|1 - \\theta| > \\varepsilon\\), derivative depends whether \\(\\theta < 1\\) (protective) \\(\\theta > 1\\) (harmful). \\(|1 - \\theta| \\leq \\varepsilon\\), smooth approximation used.","code":""},{"path":"https://lucymcgowan.github.io/sve/reference/sve_from_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Symmetric Vaccine Efficacy from Relative Effect Measures — sve_from_effect","text":"","code":"# Example with a hazard ratio from a Cox model # Suppose: HR = 0.7, SE(log(HR)) = 0.15 hr <- 0.7 se_log_hr <- 0.15 var_log_hr <- se_log_hr^2 sve_from_effect(theta = hr, var_log_theta = var_log_hr) #>   estimate      lower     upper level    method #> 1      0.3 0.08317729 0.4897028  0.95 tanh-Wald  # Example with multiple effect estimates (e.g., from subgroups) hrs <- c(0.5, 0.8, 1.2) var_log_hrs <- c(0.04, 0.025, 0.036) sve_from_effect(theta = hrs, var_log_theta = var_log_hrs) #>     estimate       lower     upper level    method #> 1  0.5000000  0.28027235 0.6699402  0.95 tanh-Wald #> 2  0.2000000 -0.06138895 0.4357166  0.95 tanh-Wald #> 3 -0.1666667 -0.50275923 0.2131984  0.95 tanh-Wald  # Using output directly from a Cox model if (FALSE) { # \\dontrun{ library(survival) fit <- coxph(Surv(time, status) ~ vaccination + age + baseline_risk,              data = sim_trial_data) hr <- exp(coef(fit)[\"vaccination\"]) var_log_hr <- vcov(fit)[\"vaccination\", \"vaccination\"] sve_from_effect(theta = hr, var_log_theta = var_log_hr) } # }"}]
